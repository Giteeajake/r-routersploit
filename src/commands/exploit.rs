// src/commands/exploit.rs  (dispatcher)

use anyhow::{Result, bail};
use crate::modules::exploits::{self, payloadgens};

pub async fn run_exploit(module_name: &str, target: &str) -> Result<()> {
    match module_name {
        // ───────────── standard exploits ─────────────
        "sample_exploit"                        |
        "exploits/sample_exploit"                  => exploits::sample_exploit::run(target).await?,

        // ───────── payload generators (nested) ───────
        "payloadgenbat"                          |      // short alias
        "payloadgens/payloadgenbat"              |      // full path users type in shell/CLI
        "exploits/payloadgens/payloadgenbat"        => payloadgens::payloadgenbat::run(target).await?,

        _ => bail!("Exploit module '{}' not found.", module_name),
    }
    Ok(())
}
